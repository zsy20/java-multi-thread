1.1  进程和多线程的概念及线程的优点
    
    进程:
      什么是进程？进程是操作系统结构的基础，是系统进行资源分配和调度的一个独立单位。

     线程:
       什么是线程？ 线程可以理解成是在进程中独立运行的子任务。
       多线程有什么优点？使用多线程技术后，可以在同一时间内运行更多不同种类的任务。

       理解多线程的优势:
         在单任务环境中，如果有多个任务要被执行的话，多个任务需要排队执行。
	 单任务的特点就是排队执行，也就是同步，就像在cmd中输入一条命令后，必须等待
	 这条命令执行完成才可以执行下一条命令，这就是单任务环境的缺点，CPU的利用率降低。
         
	 在多任务运行环境中：CPU可以在多个任务之间来回切换，任务与任务之间不必互相等待，
	 系统的运行效率大大得到提升。使用多线程也就是在使用异步。

1.2 使用多线程
    一个进程在运行时至少会有一个线程在运行。

    1.2.1 继承Thread类
        实现多线程编程的方式主要有两种：
	  1.继承Thread类。
	  2.实现Runnable 接口

	  public class Thread implements Runnable

	使用多线程技术时，代码的运行结果与代码的执行顺序或者调用顺序无关。

	如果多次调用start() 方法，则会出现异常Exception in thread "main" java.lang.IllgalThreadStateException

1.2.3  实例变量与线程安全
    
    自定义线程类中的实例变量针对其他线程可以有共享和不共享之分
      1. 不共享数据的情况
      2.共享数据的情况

      共享数据的情况就是多个线程可以访问同一个变量，可能会出现线程安全的问题。

      非线程安全: 主要指多个线程对同一个对象的同一个实例变量进行操作时会出现值被更改，值不同步的情况。

      synchronized可以在任意对象及方法上加锁，加锁的这段代码称为“互斥区”或“临界区”
